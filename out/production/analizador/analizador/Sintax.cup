package analizador;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, T_dato, Int, Cadena, If, Else, Do, While, For,Declaracion,Tipo,Imprimir,
    Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Identificador,
    Numero, ERROR;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR, IMP, CONCATENACION;

start with INICIO;

INICIO ::=
    SENTENCIA
;
SENTENCIA ::=
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF |
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA DO_WHILE |
    DO_WHILE |
    SENTENCIA FOR |
    FOR |
    SENTENCIA IMP |
    SENTENCIA CONCATENACION |
    CONCATENACION  |
    IMP
;

CONCATENACION ::=
    Suma Comillas Identificador Comillas |
    Suma Comillas Numero Comillas
;

IMP ::=
    Imprimir Parentesis_a Comillas Identificador Comillas Parentesis_c P_coma |
    Imprimir Parentesis_a Identificador Parentesis_c P_coma |
    Imprimir Parentesis_a Comillas Identificador Comillas SENTENCIA CONCATENACION Parentesis_c P_coma
;

DECLARACION ::=
    Declaracion Identificador Tipo T_dato P_coma |
    Declaracion Identificador Tipo T_dato Op_atribucion Numero P_coma |
    Declaracion Identificador Tipo T_dato Igual Numero P_coma |
    Declaracion Identificador Tipo T_dato Op_incremento P_coma |
    Declaracion Op_incremento Identificador P_coma |
    Declaracion Identificador Tipo T_dato Op_atribucion Comillas Comillas P_coma |
    Declaracion Identificador Tipo T_dato Igual Comillas Comillas P_coma |
    Declaracion Identificador Tipo T_dato Op_atribucion Comillas Identificador Comillas P_coma |
    Declaracion Identificador Tipo T_dato Igual Comillas Identificador Comillas P_coma
    Identificador Op_atribucion Comillas Comillas P_coma |
    Identificador Igual Comillas Comillas P_coma |
    Identificador Op_atribucion Comillas Identificador Comillas P_coma |
    Identificador Igual Numero P_coma |
    Identificador Igual Comillas Identificador Comillas P_coma
;
IF ::= If SENTENCIA_BOOLEANA Llave_a SENTENCIA Llave_c
;
SENTENCIA_BOOLEANA ::= 
    Op_booleano | 
    Declaracion Identificador Tipo T_dato Op_relacional Op_booleano |
    Declaracion Identificador Tipo T_dato Op_relacional Numero |
    Declaracion Identificador Tipo T_dato Op_relacional Identificador |
    Declaracion Identificador Tipo T_dato Op_relacional Comillas Comillas |
    Declaracion Identificador Tipo T_dato Op_relacional Comillas Identificador Comillas
    Identificador Op_relacional Op_booleano |
    Identificador Op_relacional Numero |
    Identificador Op_relacional Identificador |
    Identificador Op_relacional Comillas Comillas |
    Identificador Op_relacional Comillas Identificador Comillas
;
IF_ELSE ::= If SENTENCIA_BOOLEANA Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
WHILE ::= While SENTENCIA_BOOLEANA Llave_a SENTENCIA Llave_c
;
DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While SENTENCIA_BOOLEANA P_coma
;
FOR ::= For SENTENCIA_FOR Llave_a SENTENCIA Llave_c
;
SENTENCIA_FOR ::=
    Declaracion Identificador Tipo T_dato Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;
DECLARACION_FOR ::= 
    Identificador Op_atribucion Numero |
    Identificador Op_incremento | 
    Op_incremento Identificador
;